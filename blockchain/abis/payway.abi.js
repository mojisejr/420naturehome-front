const abi = [
  {
    type: "constructor",
    stateMutability: "nonpayable",
    inputs: [
      { type: "address", name: "_token", internalType: "contract IERC20" },
    ],
  },
  {
    type: "event",
    name: "ERC20PriceUpdated",
    inputs: [
      {
        type: "uint256",
        name: "_itemId",
        internalType: "uint256",
        indexed: true,
      },
      {
        type: "uint256",
        name: "_price",
        internalType: "uint256",
        indexed: false,
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ItemAdded",
    inputs: [
      {
        type: "uint256",
        name: "itemId",
        internalType: "uint256",
        indexed: true,
      },
      { type: "string", name: "_name", internalType: "string", indexed: false },
      {
        type: "uint256",
        name: "_price",
        internalType: "uint256",
        indexed: false,
      },
      {
        type: "uint256",
        name: "_priceERC20",
        internalType: "uint256",
        indexed: false,
      },
      {
        type: "uint256",
        name: "_timestamp",
        internalType: "uint256",
        indexed: false,
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ItemUpdated",
    inputs: [
      {
        type: "uint256",
        name: "_itemId",
        internalType: "uint256",
        indexed: true,
      },
      {
        type: "uint256",
        name: "_timestam",
        internalType: "uint256",
        indexed: false,
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewMember",
    inputs: [
      {
        type: "address",
        name: "_newMember",
        internalType: "address",
        indexed: true,
      },
      {
        type: "uint256",
        name: "_timestamp",
        internalType: "uint256",
        indexed: false,
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        type: "address",
        name: "previousOwner",
        internalType: "address",
        indexed: true,
      },
      {
        type: "address",
        name: "newOwner",
        internalType: "address",
        indexed: true,
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PaidWithERC20",
    inputs: [
      {
        type: "uint256",
        name: "_itemId",
        internalType: "uint256",
        indexed: true,
      },
      {
        type: "address",
        name: "_customer",
        internalType: "address",
        indexed: true,
      },
      {
        type: "uint256",
        name: "_amounts",
        internalType: "uint256",
        indexed: false,
      },
      { type: "uint256", name: "g", internalType: "uint256", indexed: false },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PaidWithETH",
    inputs: [
      {
        type: "uint256",
        name: "_itemId",
        internalType: "uint256",
        indexed: true,
      },
      {
        type: "address",
        name: "_customer",
        internalType: "address",
        indexed: true,
      },
      {
        type: "uint256",
        name: "_amounts",
        internalType: "uint256",
        indexed: false,
      },
      { type: "uint256", name: "g", internalType: "uint256", indexed: false },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PriceUpdated",
    inputs: [
      {
        type: "uint256",
        name: "_itemId",
        internalType: "uint256",
        indexed: true,
      },
      {
        type: "uint256",
        name: "_price",
        internalType: "uint256",
        indexed: false,
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetActive",
    inputs: [
      {
        type: "address",
        name: "_wallet",
        internalType: "address",
        indexed: true,
      },
      { type: "bool", name: "_value", internalType: "bool", indexed: false },
    ],
    anonymous: false,
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "addItem",
    inputs: [
      { type: "string", name: "_name", internalType: "string" },
      { type: "uint256", name: "_type", internalType: "uint256" },
      { type: "uint256", name: "_ERC20price", internalType: "uint256" },
      { type: "uint256", name: "_price", internalType: "uint256" },
      { type: "uint8", name: "_stars", internalType: "uint8" },
      { type: "uint256", name: "_grade", internalType: "uint256" },
      { type: "string", name: "_desc", internalType: "string" },
      { type: "string", name: "_imageUrl", internalType: "string" },
      { type: "bool", name: "_have", internalType: "bool" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "currentItemId",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "currentPaymentId",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      {
        type: "tuple[]",
        name: "",
        internalType: "struct PayWay420.Customer[]",
        components: [
          { type: "address", name: "wallet", internalType: "address" },
          { type: "uint256", name: "discordId", internalType: "uint256" },
          { type: "string", name: "title", internalType: "string" },
          { type: "uint256", name: "exp", internalType: "uint256" },
          { type: "bool", name: "active", internalType: "bool" },
          { type: "bool", name: "registered", internalType: "bool" },
          { type: "uint256", name: "paymentCount", internalType: "uint256" },
        ],
      },
    ],
    name: "getAllCustomers",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      {
        type: "tuple[]",
        name: "",
        internalType: "struct PayWay420.Item[]",
        components: [
          { type: "string", name: "name", internalType: "string" },
          {
            type: "uint8",
            name: "types",
            internalType: "enum PayWay420.Types",
          },
          { type: "uint256", name: "ERC20price", internalType: "uint256" },
          { type: "uint256", name: "price", internalType: "uint256" },
          { type: "uint8", name: "stars", internalType: "uint8" },
          {
            type: "uint8",
            name: "grade",
            internalType: "enum PayWay420.Grades",
          },
          { type: "string", name: "description", internalType: "string" },
          { type: "string", name: "imageUrl", internalType: "string" },
          { type: "bool", name: "have", internalType: "bool" },
        ],
      },
    ],
    name: "getAllItems",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      {
        type: "tuple[]",
        name: "",
        internalType: "struct PayWay420.Payment[]",
        components: [
          {
            type: "tuple",
            name: "customer",
            internalType: "struct PayWay420.Customer",
            components: [
              { type: "address", name: "wallet", internalType: "address" },
              { type: "uint256", name: "discordId", internalType: "uint256" },
              { type: "string", name: "title", internalType: "string" },
              { type: "uint256", name: "exp", internalType: "uint256" },
              { type: "bool", name: "active", internalType: "bool" },
              { type: "bool", name: "registered", internalType: "bool" },
              {
                type: "uint256",
                name: "paymentCount",
                internalType: "uint256",
              },
            ],
          },
          { type: "uint256", name: "itemId", internalType: "uint256" },
          { type: "uint256", name: "paid", internalType: "uint256" },
          { type: "string", name: "memo", internalType: "string" },
          { type: "uint256", name: "timestamp", internalType: "uint256" },
        ],
      },
    ],
    name: "getAllPayments",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "getAmountsERC20ToPay",
    inputs: [
      { type: "uint256", name: "_itemId", internalType: "uint256" },
      { type: "uint256", name: "g", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "getAmountsEthToPay",
    inputs: [
      { type: "uint256", name: "_itemId", internalType: "uint256" },
      { type: "uint256", name: "g", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "getBalance",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "getCurrentItemId",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "getCurrentPaymentId",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      {
        type: "tuple",
        name: "",
        internalType: "struct PayWay420.Customer",
        components: [
          { type: "address", name: "wallet", internalType: "address" },
          { type: "uint256", name: "discordId", internalType: "uint256" },
          { type: "string", name: "title", internalType: "string" },
          { type: "uint256", name: "exp", internalType: "uint256" },
          { type: "bool", name: "active", internalType: "bool" },
          { type: "bool", name: "registered", internalType: "bool" },
          { type: "uint256", name: "paymentCount", internalType: "uint256" },
        ],
      },
    ],
    name: "getCustomerByWallet",
    inputs: [{ type: "address", name: "_wallet", internalType: "address" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "getERC20Balance",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      {
        type: "tuple",
        name: "",
        internalType: "struct PayWay420.Item",
        components: [
          { type: "string", name: "name", internalType: "string" },
          {
            type: "uint8",
            name: "types",
            internalType: "enum PayWay420.Types",
          },
          { type: "uint256", name: "ERC20price", internalType: "uint256" },
          { type: "uint256", name: "price", internalType: "uint256" },
          { type: "uint8", name: "stars", internalType: "uint8" },
          {
            type: "uint8",
            name: "grade",
            internalType: "enum PayWay420.Grades",
          },
          { type: "string", name: "description", internalType: "string" },
          { type: "string", name: "imageUrl", internalType: "string" },
          { type: "bool", name: "have", internalType: "bool" },
        ],
      },
    ],
    name: "getItemsById",
    inputs: [{ type: "uint256", name: "_itemId", internalType: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      {
        type: "tuple[]",
        name: "",
        internalType: "struct PayWay420.Payment[]",
        components: [
          {
            type: "tuple",
            name: "customer",
            internalType: "struct PayWay420.Customer",
            components: [
              { type: "address", name: "wallet", internalType: "address" },
              { type: "uint256", name: "discordId", internalType: "uint256" },
              { type: "string", name: "title", internalType: "string" },
              { type: "uint256", name: "exp", internalType: "uint256" },
              { type: "bool", name: "active", internalType: "bool" },
              { type: "bool", name: "registered", internalType: "bool" },
              {
                type: "uint256",
                name: "paymentCount",
                internalType: "uint256",
              },
            ],
          },
          { type: "uint256", name: "itemId", internalType: "uint256" },
          { type: "uint256", name: "paid", internalType: "uint256" },
          { type: "string", name: "memo", internalType: "string" },
          { type: "uint256", name: "timestamp", internalType: "uint256" },
        ],
      },
    ],
    name: "getPaymentOf",
    inputs: [{ type: "address", name: "_wallet", internalType: "address" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "address", name: "", internalType: "address" }],
    name: "owner",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "payable",
    outputs: [],
    name: "pay",
    inputs: [
      { type: "uint256", name: "itemId", internalType: "uint256" },
      { type: "uint256", name: "_discordId", internalType: "uint256" },
      { type: "uint256", name: "g", internalType: "uint256" },
      { type: "string", name: "_memo", internalType: "string" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "payWithERC20",
    inputs: [
      { type: "uint256", name: "itemId", internalType: "uint256" },
      { type: "uint256", name: "_discordId", internalType: "uint256" },
      { type: "uint256", name: "_amounts", internalType: "uint256" },
      { type: "uint256", name: "g", internalType: "uint256" },
      { type: "string", name: "_memo", internalType: "string" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "register",
    inputs: [{ type: "uint256", name: "_discordId", internalType: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "renounceOwnership",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "setActive",
    inputs: [
      { type: "address", name: "_wallet", internalType: "address" },
      { type: "bool", name: "_value", internalType: "bool" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "address", name: "", internalType: "contract IERC20" }],
    name: "token",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "transferOwnership",
    inputs: [{ type: "address", name: "newOwner", internalType: "address" }],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "updateERC20PriceOf",
    inputs: [
      { type: "uint256", name: "_itemId", internalType: "uint256" },
      { type: "uint256", name: "_price", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "updateItem",
    inputs: [
      { type: "uint256", name: "_itemId", internalType: "uint256" },
      { type: "string", name: "_name", internalType: "string" },
      { type: "uint256", name: "_type", internalType: "uint256" },
      { type: "uint8", name: "_stars", internalType: "uint8" },
      { type: "uint256", name: "_grade", internalType: "uint256" },
      { type: "string", name: "_desc", internalType: "string" },
      { type: "string", name: "_imageUrl", internalType: "string" },
      { type: "bool", name: "_have", internalType: "bool" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "updatePriceOf",
    inputs: [
      { type: "uint256", name: "_itemId", internalType: "uint256" },
      { type: "uint256", name: "_price", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "withdraw",
    inputs: [{ type: "address", name: "_to", internalType: "address" }],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "withdrawERC20",
    inputs: [{ type: "address", name: "_to", internalType: "address" }],
  },
  { type: "receive", stateMutability: "payable" },
];

const address = "0x3714b2D96F52BcC0046Fd5b1C1252B61A63A5565";

export { abi, address };
